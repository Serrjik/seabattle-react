{"version":3,"sources":["pages/styles.module.css","components/BattleField.jsx","components/SeaBattle.jsx","hooks/useSeaBattle.js","components/BattleFieldTable.jsx","components/Dock.jsx","components/Ship.jsx","components/DraggableShip.jsx","components/BattleFieldEditor.jsx","components/Shot.jsx","additional.js","store/bot.js","pages/BotPage.jsx","store/editor.js","store/main.js","pages/EditorPage.jsx","store/party.js","pages/MainPage.jsx","store/index.js","socket.js","pages/PartyPage.jsx","App.js","reportWebVitals.js","index.js","components/styles.module.css"],"names":["module","exports","BattleField","props","children","style","className","styles","battlefield","SeaBattleContext","createContext","SeaBattle","cellSize","value","useMemo","Provider","defaultProps","useSeaBattle","useContext","BattleFieldTable","forwardRef","ref","columns","rows","signed","axisX","axisY","hovered","onClick","matrix","y","row","x","item","push","map","markerX","markerY","marker","left","top","classNames","width","height","n","Dock","dock","Ship","length","direction","killed","along","across","offsetX","offsetY","ship","DraggableShip","id","useDrag","type","collect","monitor","isDragging","collected","drag","onclick","BattleFieldEditor","ships","onPlace","onDock","onRotate","dockedShips","filter","placed","placedShips","placeRef","useRef","useDrop","accept","drop","dockDrop","mouseStart","getInitialClientOffset","mouseFinish","getClientOffset","shipStart","getInitialSourceClientOffset","diff","rect","current","getBoundingClientRect","Math","floor","placeDrop","e","clientX","clientY","Shot","status","shot","isValidCoordinates","isNormalPosition","Array","fill","dx","dy","i","randomize","random","shoot","shots","find","max","hittedShip","mainLoop","hittedShots","getShotedCell","numberOfKilledShipsOfEachSize","markCornersEmpty","forEach","totalKilledShips","reduce","acc","cellsWithWoundedDecks","mapOfAllowedCells","allowableDistance","freeCells","initialState","playerShips","playerShots","botShips","botShots","playing","playerWin","botSlice","createSlice","name","reducers","reset","state","action","Object","assign","payload","doShoot","botTurn","freeCell","Error","every","actions","BotPage","dispatch","useDispatch","useSelector","bot","defaultShips","main","useState","showBot","setShowBot","useEffect","textAlign","fontSize","container","to","editorSlice","setShips","place","defaultShip","rotate","mouseX","mouseY","document","querySelector","shipCoordinatesLeft","shipCoordinatesTop","newShipX","newShipY","cellByWhichToRotate","mainSlice","EditorPage","editor","history","useHistory","clickHandler","useCallback","setDefaultShips","disabled","partySlice","key","player1","ships1","shots1","player2","ships2","shots2","waiting","player1Turn","player1Win","incorrect","update","MainPage","store","configureStore","reducer","botReducer","editorReducer","mainReducer","party","partyReducer","socket","io","on","challenge","emit","PartyPage","useParams","socketChallenge","pathname","href","window","location","marginTop","userSelect","onExit","justifyContent","alignItems","minHeight","JSON","stringify","App","exact","path","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","DndProvider","backend","HTML5Backend","getElementById"],"mappings":"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","file":"static/js/main.1029c4a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1ZoGl\",\"main-content\":\"styles_main-content__1nsfp\",\"main-actions\":\"styles_main-actions__2HC0b\",\"editor-actions\":\"styles_editor-actions__3CX6B\",\"action\":\"styles_action__1UQw9\"};","import styles from './styles.module.css'\r\n\r\n// Этот компонент объединит в себе BattleFieldTable, Ship, Shot.\r\nconst BattleField = props => {\r\n\tconst { children, style = {} } = props\r\n\r\n\treturn (\r\n\t\t<div className={styles.battlefield} style={style}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default BattleField\r\n","import { createContext, useMemo } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const SeaBattleContext = createContext()\r\n\r\nconst SeaBattle = props => {\r\n\tconst { cellSize, children } = props\r\n\t// Размер ячейки игрового поля.\r\n\tconst value = useMemo(() => ({ cellSize }), [cellSize])\r\n\r\n\treturn (\r\n\t\t<SeaBattleContext.Provider value={value}>\r\n\t\t\t{children}\r\n\t\t</SeaBattleContext.Provider>\r\n\t)\r\n}\r\n\r\nexport default SeaBattle\r\n\r\nSeaBattle.propTypes = {\r\n\tcellSize: PropTypes.number.isRequired\r\n}\r\n\r\nSeaBattle.defaultProps = {\r\n\tcellSize: 32\r\n}","import { useContext } from \"react\";\r\nimport { SeaBattleContext } from \"../components/SeaBattle\";\r\n\r\nconst useSeaBattle = () => useContext(SeaBattleContext)\r\n\r\nexport default useSeaBattle","import { useSeaBattle } from '../hooks'\r\nimport styles from './styles.module.css'\r\nimport PropTypes from 'prop-types'\r\nimport { useMemo, forwardRef } from 'react'\r\nimport classNames from 'classnames'\r\n\r\n// Здесь хранится разлиновка (матрица) игрового поля.\r\nconst BattleFieldTable = forwardRef((props, ref) => {\r\n\tconst { columns, rows, signed, axisX, axisY, hovered, onClick } = props\r\n\tconst { cellSize } = useSeaBattle()\r\n\r\n\tconst matrix = useMemo(() => {\r\n\t\tconst matrix = []\r\n\r\n\t\tfor (let y = 0; y < rows; y++) {\r\n\t\t\tconst row = []\r\n\r\n\t\t\tfor (let x = 0; x < columns; x++) {\r\n\t\t\t\tconst item = { x, y }\r\n\t\t\t\trow.push(item)\r\n\t\t\t}\r\n\r\n\t\t\tmatrix.push(row)\r\n\t\t}\r\n\r\n\t\treturn matrix\r\n\t}, [columns, rows])\r\n\r\n\treturn (\r\n\t\t<table ref={ref} className={styles['battlefield-table']}>\r\n\t\t\t<tbody>\r\n\t\t\t\t{matrix.map((row, y) => (\r\n\t\t\t\t\t<tr key={y}>\r\n\t\t\t\t\t\t{row.map((item, x) => {\r\n\t\t\t\t\t\t\tlet markerX = null\r\n\t\t\t\t\t\t\tlet markerY = null\r\n\r\n\t\t\t\t\t\t\tif (signed) {\r\n\t\t\t\t\t\t\t\tif (x === 0) {\r\n\t\t\t\t\t\t\t\t\tmarkerX = (\r\n\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={styles.marker}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ left: `-${cellSize}px` }}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{axisX(y)}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (y === 0) {\r\n\t\t\t\t\t\t\t\t\tmarkerY = (\r\n\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={styles.marker}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ top: `-${cellSize}px` }}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{axisY(x)}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<td\r\n\t\t\t\t\t\t\t\t\tkey={x}\r\n\t\t\t\t\t\t\t\t\tclassName={classNames({\r\n\t\t\t\t\t\t\t\t\t\t[styles['battlefield-item']]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles['battlefield-item__hovered']]:\r\n\t\t\t\t\t\t\t\t\t\t\thovered,\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\twidth: `${cellSize}px`,\r\n\t\t\t\t\t\t\t\t\t\theight: `${cellSize}px`,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tonClick(x, y)\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{markerX}\r\n\t\t\t\t\t\t\t\t\t{markerY}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t))}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t)\r\n})\r\n\r\nexport default BattleFieldTable\r\n\r\nBattleFieldTable.propTypes = {\r\n\tcolumns: PropTypes.number,\r\n\trows: PropTypes.number,\r\n\tsigned: PropTypes.bool,\r\n\taxisX: PropTypes.func,\r\n\taxisY: PropTypes.func,\r\n\t// Мышь над полем или нет?\r\n\thovered: PropTypes.bool.isRequired,\r\n\tonClick: PropTypes.func.isRequired,\r\n}\r\n\r\nBattleFieldTable.defaultProps = {\r\n\tcolumns: 10,\r\n\trows: 10,\r\n\tsigned: true,\r\n\taxisX: n => n + 1,\r\n\taxisY: n => 'АБВГДЕЖЗИКЛМНОПРСТУФХЦЧШЩЫЭЮЯ'[n], // не более 29\r\n\thovered: false,\r\n\tonClick: () => {},\r\n}\r\n","// Док для кораблей.\r\n\r\nimport { forwardRef } from 'react'\r\nimport { useSeaBattle } from '../hooks'\r\nimport styles from './styles.module.css'\r\n\r\nconst Dock = forwardRef((props, ref) => {\r\n\tconst { cellSize } = useSeaBattle()\r\n\treturn (\r\n\t\t<div\r\n\t\t\tref={ref}\r\n\t\t\tclassName={styles.dock}\r\n\t\t\tstyle={{\r\n\t\t\t\twidth: `${cellSize * 10}px`,\r\n\t\t\t\theight: `${cellSize * 10}px`,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\nexport default Dock\r\n","import { useSeaBattle } from '../hooks'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './styles.module.css'\r\nimport { forwardRef, useMemo } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nconst Ship = forwardRef((props, ref) => {\r\n\tconst { x, y, length, direction, killed, onClick } = props\r\n\t// Размер ячейки игрового поля.\r\n\tconst { cellSize } = useSeaBattle()\r\n\r\n\tconst style = useMemo(() => {\r\n\t\tconst style = {}\r\n\r\n\t\t// Длина корабля.\r\n\t\tconst along = length * cellSize + length - 1\r\n\t\t// Ширина корабля.\r\n\t\tconst across = cellSize\r\n\r\n\t\tif (direction === 'row') {\r\n\t\t\tstyle.width = `${along}px`\r\n\t\t\tstyle.height = `${across}px`\r\n\t\t} else {\r\n\t\t\tstyle.width = `${across}px`\r\n\t\t\tstyle.height = `${along}px`\r\n\t\t}\r\n\r\n\t\tconst offsetX = x * (cellSize + 1)\r\n\t\tconst offsetY = y * (cellSize + 1)\r\n\r\n\t\tstyle.left = `${offsetX}px`\r\n\t\tstyle.top = `${offsetY}px`\r\n\r\n\t\treturn style\r\n\t}, [cellSize, direction, length, x, y])\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tonClick={onClick}\r\n\t\t\tref={ref}\r\n\t\t\tclassName={classNames(styles.ship, {\r\n\t\t\t\t[styles['ship-killed']]: killed,\r\n\t\t\t})}\r\n\t\t\tstyle={style}\r\n\t\t/>\r\n\t)\r\n})\r\n\r\nexport default Ship\r\n\r\nShip.propTypes = {\r\n\tx: PropTypes.number.isRequired,\r\n\ty: PropTypes.number.isRequired,\r\n\tlength: PropTypes.number.isRequired,\r\n\tdirection: PropTypes.oneOf(['row', 'column']).isRequired,\r\n\tkilled: PropTypes.bool.isRequired,\r\n}\r\n\r\nShip.defaultProps = {\r\n\tkilled: false,\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport { useDrag } from 'react-dnd'\r\nimport Ship from './Ship'\r\n\r\n// Корабль, который можно переносить.\r\nconst DraggableShip = props => {\r\n\tconst { id, x, y, length, direction, killed, onClick } = props\r\n\r\n\t// drag - функция, которая позволит нам работать с DraggableShip'ом.\r\n\tconst [collected, drag] = useDrag(() => ({\r\n\t\t// Тип того что перетаскиваем.\r\n\t\ttype: 'SHIP',\r\n\t\t// Идентификатор того, что перетаскиваем.\r\n\t\titem: { id },\r\n\t\t/*\r\n\t\t\tФункция, которая принимает монитор и возвращает данные,\r\n\t\t\tкоторые помещаются в первый ответ от useDrag, которые позволят нам\r\n\t\t\tманипулировать состоянием.\r\n\t\t\tМонитор - функция, которая следит за тем, как происходит процесс\r\n\t\t\tперетаскивания, и возвращает объект collected, который мы\r\n\t\t\tзапоминаем.\r\n\t\t*/\r\n\t\tcollect: monitor => ({\r\n\t\t\tisDragging: monitor.isDragging(),\r\n\t\t}),\r\n\t}))\r\n\r\n\t// Если корабль перетаскивается:\r\n\tif (collected.isDragging) {\r\n\t\t// Не отрисовывать его.\r\n\t\treturn null\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Ship\r\n\t\t\tref={drag}\r\n\t\t\tonClick={onClick}\r\n\t\t\tkilled={killed}\r\n\t\t\tx={x}\r\n\t\t\ty={y}\r\n\t\t\tlength={length}\r\n\t\t\tdirection={direction}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default DraggableShip\r\n\r\nDraggableShip.propTypes = {\r\n\tx: PropTypes.number.isRequired,\r\n\ty: PropTypes.number.isRequired,\r\n\tlength: PropTypes.number.isRequired,\r\n\tdirection: PropTypes.oneOf(['row', 'column']).isRequired,\r\n\tkilled: PropTypes.bool.isRequired,\r\n\tonclick: PropTypes.func.isRequired,\r\n}\r\n\r\nDraggableShip.defaultProps = {\r\n\tkilled: false,\r\n\tonclick() {},\r\n}\r\n","// Редактор для расстановки кораблей.\r\n\r\nimport BattleField from './BattleField'\r\nimport BattleFieldTable from './BattleFieldTable'\r\nimport Dock from './Dock'\r\nimport styles from './styles.module.css'\r\nimport PropTypes from 'prop-types'\r\nimport { useMemo, useRef } from 'react'\r\nimport DraggableShip from './DraggableShip'\r\nimport { useDrop } from 'react-dnd'\r\nimport { useSeaBattle } from '../hooks'\r\n\r\nconst BattleFieldEditor = props => {\r\n\tconst { ships, onPlace, onDock, onRotate } = props\r\n\r\n\tconst dockedShips = useMemo(\r\n\t\t() => ships.filter(ship => !ship.placed),\r\n\t\t[ships]\r\n\t)\r\n\r\n\tconst placedShips = useMemo(\r\n\t\t() => ships.filter(ship => ship.placed),\r\n\t\t[ships]\r\n\t)\r\n\r\n\tconst { cellSize } = useSeaBattle()\r\n\t// Поле, на котором размещаем корабли.\r\n\tconst placeRef = useRef()\r\n\r\n\t// Бросок корабля над полем доком.\r\n\tconst [, dockDrop] = useDrop(() => ({\r\n\t\taccept: 'SHIP',\r\n\t\tdrop(item) {\r\n\t\t\tonDock(item.id)\r\n\t\t},\r\n\t}))\r\n\r\n\t// Бросок корабля над полем для расстановки.\r\n\tconst [, placeDrop] = useDrop(() => ({\r\n\t\taccept: 'SHIP',\r\n\t\tdrop(item, monitor) {\r\n\t\t\t/*\r\n\t\t\t\tМетод getInitialClientOffset() возвращает координаты мыши\r\n\t\t\t\tотносительно верхнего левого угла страницы в момент начала\r\n\t\t\t\tперетаскивания.\r\n\t\t\t*/\r\n\t\t\tconst mouseStart = monitor.getInitialClientOffset()\r\n\r\n\t\t\t/*\r\n\t\t\t\tМетод getClientOffset() возвращает координаты мыши относительно\r\n\t\t\t\tверхнего левого угла страницы в последний момент перетаскивания.\r\n\t\t\t*/\r\n\t\t\tconst mouseFinish = monitor.getClientOffset()\r\n\r\n\t\t\t/*\r\n\t\t\t\tМетод getInitialSourceClientOffset() возвращает координаты\r\n\t\t\t\tлевого верхнего угла перетаскиваемого элемента относительно\r\n\t\t\t\tверхнего левого угла страницы в момент начала перетаскивания.\r\n\t\t\t*/\r\n\t\t\tconst shipStart = monitor.getInitialSourceClientOffset()\r\n\r\n\t\t\t/*\r\n\t\t\t\tКоординаты, где взяли корабль\r\n\t\t\t\tотносительно верхнего левого угла этого корабля.\r\n\t\t\t*/\r\n\t\t\tconst diff = {\r\n\t\t\t\tx: mouseStart.x - shipStart.x,\r\n\t\t\t\ty: mouseStart.y - shipStart.y,\r\n\t\t\t}\r\n\r\n\t\t\t// Координаты поля, на котором размещаем корабли.\r\n\t\t\tconst rect = placeRef.current.getBoundingClientRect()\r\n\r\n\t\t\t/*\r\n\t\t\t\tКоординаты ячейки поля, на котором размещаем корабли,\r\n\t\t\t\tпри броске корабля.\r\n\t\t\t\tИщем ячейку, на которую упал центр первой ячейки корабля.\r\n\t\t\t*/\r\n\t\t\tconst x = Math.floor(\r\n\t\t\t\t(mouseFinish.x - rect.left - diff.x + cellSize / 2) / cellSize\r\n\t\t\t)\r\n\r\n\t\t\tconst y = Math.floor(\r\n\t\t\t\t(mouseFinish.y - rect.top - diff.y + cellSize / 2) / cellSize\r\n\t\t\t)\r\n\r\n\t\t\tonPlace(item.id, x, y)\r\n\r\n\t\t\t/*\r\n\t\t\t\tМетод getSourceClientOffset() возвращает координаты левого\r\n\t\t\t\tверхнего угла перетаскиваемого элемента относительно верхнего\r\n\t\t\t\tлевого угла страницы в последний момент перетаскивания.\r\n\t\t\t*/\r\n\t\t},\r\n\t}))\r\n\r\n\tplaceDrop(placeRef)\r\n\r\n\treturn (\r\n\t\t<div className={styles['battlefield-constructor']}>\r\n\t\t\t<Dock ref={dockDrop}>\r\n\t\t\t\t{dockedShips.map(ship => (\r\n\t\t\t\t\t<DraggableShip\r\n\t\t\t\t\t\tkey={ship.id}\r\n\t\t\t\t\t\t{...ship}\r\n\t\t\t\t\t\tonClick={() => onRotate(ship.id)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</Dock>\r\n\t\t\t<BattleField>\r\n\t\t\t\t<BattleFieldTable ref={placeRef} />\r\n\r\n\t\t\t\t{placedShips.map(ship => (\r\n\t\t\t\t\t<DraggableShip\r\n\t\t\t\t\t\tkey={ship.id}\r\n\t\t\t\t\t\t{...ship}\r\n\t\t\t\t\t\tonClick={e =>\r\n\t\t\t\t\t\t\tonRotate(ship.id, e.clientX, e.clientY, cellSize)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</BattleField>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default BattleFieldEditor\r\n\r\nBattleFieldEditor.propTypes = {\r\n\tships: PropTypes.array.isRequired,\r\n\tonPlace: PropTypes.func.isRequired,\r\n\tonDock: PropTypes.func.isRequired,\r\n\tonRotate: PropTypes.func.isRequired,\r\n}\r\n","import { useSeaBattle } from \"../hooks\"\r\nimport styles from \"./styles.module.css\"\r\nimport classNames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nimport { useMemo } from \"react\"\r\n\r\nconst Shot = props => {\r\n\tconst { x, y, status } = props\r\n\t// Размер ячейки игрового поля.\r\n\tconst { cellSize } = useSeaBattle()\r\n\r\n\tconst style = useMemo(() => {\r\n\t\tconst style = {\r\n\t\t\twidth: `${cellSize}px`,\r\n\t\t\theight: `${cellSize}px`,\r\n\t\t}\r\n\r\n\t\tconst offsetX = x * (cellSize + 1)\r\n\t\tconst offsetY = y * (cellSize + 1)\r\n\r\n\t\tstyle.left = `${offsetX}px`\r\n\t\tstyle.top = `${offsetY}px`\r\n\r\n\t\treturn style\r\n\t}, [cellSize, x, y])\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={style}\r\n\t\t\tclassName={classNames({\r\n\t\t\t\t[styles.shot]: true,\r\n\t\t\t\t[styles['shot-missed']]: status === 'missed',\r\n\t\t\t\t[styles['shot-hitted']]: status === 'hitted',\r\n\t\t\t})}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default Shot\r\n\r\nShot.propTypes = {\r\n\tx: PropTypes.number.isRequired,\r\n\ty: PropTypes.number.isRequired,\r\n\tstatus: PropTypes.oneOf([\"hitted\", \"missed\"]).isRequired,\r\n}","// Вспомогательные функции.\r\n\r\n// Функция проверяет координаты на валидность.\r\nexport const isValidCoordinates = (x, y) => 0 <= x && x < 10 && 0 <= y && y < 10\r\n\r\n// Функция возвращает стандартный набор кораблей.\r\nexport const getDefaultShips = () => [\r\n\t/*\r\n\t\tplaced - флаг, который показывает, стоит ли корабль на игровом поле.\r\n\t\tЕсли он false, значит корабль ещё в доке.\r\n\t*/\r\n\t{ id: 1, x: 0, y: 0, length: 4, direction: 'row', placed: false },\r\n\t{ id: 2, x: 0, y: 2, length: 3, direction: 'row', placed: false },\r\n\t{ id: 3, x: 4, y: 2, length: 3, direction: 'row', placed: false },\r\n\t{ id: 4, x: 0, y: 4, length: 2, direction: 'row', placed: false },\r\n\t{ id: 5, x: 3, y: 4, length: 2, direction: 'row', placed: false },\r\n\t{ id: 6, x: 6, y: 4, length: 2, direction: 'row', placed: false },\r\n\t{ id: 7, x: 0, y: 6, length: 1, direction: 'row', placed: false },\r\n\t{ id: 8, x: 2, y: 6, length: 1, direction: 'row', placed: false },\r\n\t{ id: 9, x: 4, y: 6, length: 1, direction: 'row', placed: false },\r\n\t{ id: 10, x: 6, y: 6, length: 1, direction: 'row', placed: false },\r\n]\r\n\r\n/*\r\n\tФункция определяет допустимо ли принятое расположение кораблей.\r\n\tПринимает массив кораблей.\r\n*/\r\nexport const isNormalPosition = ships => {\r\n\t/*\r\n\t\tВспомогательная матрица.\r\n\t\tЕсли в ячейку нельзя ставить корабль, записываем в неё 1.\r\n\t*/\r\n\tconst matrix = Array(10)\r\n\t\t.fill()\r\n\t\t.map(() => Array(10).fill(0))\r\n\r\n\tfor (const ship of ships) {\r\n\t\tconst { direction, length } = ship\r\n\r\n\t\tconst dx = direction === 'row'\r\n\t\tconst dy = direction === 'column'\r\n\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tconst x = ship.x + i * dx\r\n\t\t\tconst y = ship.y + i * dy\r\n\r\n\t\t\tif (!isValidCoordinates(x, y) || matrix[y][x]) {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (direction === 'row') {\r\n\t\t\tfor (let y = ship.y - 1; y <= ship.y + 1; y++) {\r\n\t\t\t\tfor (let x = ship.x - 1; x <= ship.x + length; x++) {\r\n\t\t\t\t\tif (isValidCoordinates(x, y)) {\r\n\t\t\t\t\t\tmatrix[y][x] = 1\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let y = ship.y - 1; y <= ship.y + length; y++) {\r\n\t\t\t\tfor (let x = ship.x - 1; x <= ship.x + 1; x++) {\r\n\t\t\t\t\tif (isValidCoordinates(x, y)) {\r\n\t\t\t\t\t\tmatrix[y][x] = 1\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn true\r\n}\r\n\r\n// Функция выставляет корабли случайным образом.\r\nexport const randomize = () => {\r\n\tconst ships = getDefaultShips()\r\n\r\n\tfor (let i = 0; i < 100_000; i++) {\r\n\t\tfor (const ship of ships) {\r\n\t\t\tship.x = Math.floor(Math.random() * 10)\r\n\t\t\tship.y = Math.floor(Math.random() * 10)\r\n\t\t\tship.direction = ['row', 'column'][Math.floor(Math.random() * 2)]\r\n\t\t}\r\n\r\n\t\tif (isNormalPosition(ships)) {\r\n\t\t\treturn ships\r\n\t\t}\r\n\t}\r\n\r\n\treturn getDefaultShips()\r\n}\r\n\r\n/*\r\n\tФункция добавляет выстрел на поле.\r\n\tПринимает все корабли, выстрелы что уже есть, и координаты нового выстрела.\r\n*/\r\nexport const shoot = (ships, shots, x, y) => {\r\n\tif (shots.find(shot => shot.x === x && shot.y === y)) {\r\n\t\treturn false\r\n\t}\r\n\r\n\tconst shot = {\r\n\t\tid: 1 + Math.max(0, ...shots.map(shot => shot.id)),\r\n\t\tx,\r\n\t\ty,\r\n\t\tstatus: 'missed',\r\n\t}\r\n\r\n\tshots.push(shot)\r\n\r\n\t// Корабль, в который попали.\r\n\tlet hittedShip = null\r\n\r\n\tmainLoop: for (const ship of ships) {\r\n\t\tconst dx = ship.direction === 'row'\r\n\t\tconst dy = ship.direction === 'column'\r\n\r\n\t\tfor (let i = 0; i < ship.length; i++) {\r\n\t\t\tconst x = ship.x + dx * i\r\n\t\t\tconst y = ship.y + dy * i\r\n\r\n\t\t\tif (shot.x === x && shot.y === y) {\r\n\t\t\t\tshot.status = 'hitted'\r\n\t\t\t\thittedShip = ship\r\n\t\t\t\tbreak mainLoop\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (shot.status === 'hitted') {\r\n\t\tconst hittedShots = []\r\n\r\n\t\tconst dx = hittedShip.direction === 'row'\r\n\t\tconst dy = hittedShip.direction === 'column'\r\n\r\n\t\tfor (let i = 0; i < hittedShip.length; i++) {\r\n\t\t\tconst x = hittedShip.x + dx * i\r\n\t\t\tconst y = hittedShip.y + dy * i\r\n\t\t\tconst shot = shots.find(shot => shot.x === x && shot.y === y)\r\n\r\n\t\t\tif (shot) {\r\n\t\t\t\thittedShots.push(shot)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (hittedShots.length === hittedShip.length) {\r\n\t\t\thittedShip.killed = true\r\n\t\t}\r\n\t}\r\n\r\n\treturn shot\r\n}\r\n\r\n// Функция возвращает ячейку, в которую в принципе имеет смысл стрялять.\r\nexport const getFreeCell = (ships, shots) => {\r\n\t/*\r\n\t\tВспомогательная матрица.\r\n\t\tЕсли в ячейку нельзя ставить корабль, записываем в неё 1.\r\n\t*/\r\n\tconst matrix = Array(10)\r\n\t\t.fill()\r\n\t\t.map(() => Array(10).fill(0))\r\n\r\n\tfor (const { x, y } of shots) {\r\n\t\tmatrix[y][x] = 1\r\n\t}\r\n\r\n\tfor (const ship of ships) {\r\n\t\tif (!ship.killed) {\r\n\t\t\tcontinue\r\n\t\t}\r\n\r\n\t\tconst { direction, length } = ship\r\n\r\n\t\tif (direction === 'row') {\r\n\t\t\tfor (let y = ship.y - 1; y <= ship.y + 1; y++) {\r\n\t\t\t\tfor (let x = ship.x - 1; x <= ship.x + length; x++) {\r\n\t\t\t\t\tif (isValidCoordinates(x, y)) {\r\n\t\t\t\t\t\tmatrix[y][x] = 1\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let y = ship.y - 1; y <= ship.y + length; y++) {\r\n\t\t\t\tfor (let x = ship.x - 1; x <= ship.x + 1; x++) {\r\n\t\t\t\t\tif (isValidCoordinates(x, y)) {\r\n\t\t\t\t\t\tmatrix[y][x] = 1\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst freeCells = []\r\n\tfor (let y = 0; y < 10; y++) {\r\n\t\tfor (let x = 0; x < 10; x++) {\r\n\t\t\tif (matrix[y][x] === 0) {\r\n\t\t\t\tfreeCells.push({ x, y })\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn freeCells[Math.floor(Math.random() * freeCells.length)]\r\n}\r\n\r\n/*\r\n\tФункция возвращает ячейку для выстрела с наибольшей вероятностью попадания\r\n\tиспользуя данные по убитым и раненым кораблям.\r\n*/\r\nexport const getShotedCell = (ships, shots) => {\r\n\t// Количество убитых кораблей каждого размера (1-палубных - 4 палубных).\r\n\tlet numberOfKilledShipsOfEachSize = [\r\n\t\t[1, 0],\r\n\t\t[2, 0],\r\n\t\t[3, 0],\r\n\t\t[4, 0],\r\n\t]\r\n\r\n\t// Функция отмечает углы секции корабля пустыми.\r\n\tconst markCornersEmpty = (ship, x, y) => {\r\n\t\t;[\r\n\t\t\t[ship.y - 1, ship.x - 1],\r\n\t\t\t[ship.y + 1, ship.x - 1],\r\n\t\t\t[ship.y - 1, ship.x + 1],\r\n\t\t\t[ship.y + 1, ship.x + 1],\r\n\t\t].forEach(([y, x]) => {\r\n\t\t\tif (isValidCoordinates(x, y)) {\r\n\t\t\t\tmatrix[y][x] = 1\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/*\r\n\t\tВспомогательная матрица.\r\n\t\tЕсли в ячейке не может быть корабля, или уже есть выстрел,\r\n\t\tто записываем в неё 1.\r\n\t*/\r\n\tconst matrix = Array(10)\r\n\t\t.fill()\r\n\t\t.map(() => Array(10).fill(0))\r\n\r\n\tfor (const { x, y } of shots) {\r\n\t\tmatrix[y][x] = 1\r\n\t}\r\n\r\n\tfor (const ship of ships) {\r\n\t\tconst { direction, length } = ship\r\n\r\n\t\t/* Если корабль НЕ убит: */\r\n\t\tif (!ship.killed) {\r\n\t\t\tif (direction === 'row') {\r\n\t\t\t\tfor (let y = ship.y - 1; y <= ship.y + 1; y++) {\r\n\t\t\t\t\tfor (let x = ship.x - 1; x <= ship.x + length; x++) {\r\n\t\t\t\t\t\tif (shots.find(shot => shot.x === x && shot.y === y)) {\r\n\t\t\t\t\t\t\tmarkCornersEmpty(ship, x, y)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (let y = ship.y - 1; y <= ship.y + length; y++) {\r\n\t\t\t\t\tfor (let x = ship.x - 1; x <= ship.x + 1; x++) {\r\n\t\t\t\t\t\tif (shots.find(shot => shot.x === x && shot.y === y)) {\r\n\t\t\t\t\t\t\tmarkCornersEmpty(ship, x, y)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcontinue\r\n\t\t}\r\n\r\n\t\t/* Если корабль убит: */\r\n\t\tnumberOfKilledShipsOfEachSize[ship.length - 1][1]++\r\n\r\n\t\tif (direction === 'row') {\r\n\t\t\tfor (let y = ship.y - 1; y <= ship.y + 1; y++) {\r\n\t\t\t\tfor (let x = ship.x - 1; x <= ship.x + length; x++) {\r\n\t\t\t\t\tif (isValidCoordinates(x, y)) {\r\n\t\t\t\t\t\tmatrix[y][x] = 1\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let y = ship.y - 1; y <= ship.y + length; y++) {\r\n\t\t\t\tfor (let x = ship.x - 1; x <= ship.x + 1; x++) {\r\n\t\t\t\t\tif (isValidCoordinates(x, y)) {\r\n\t\t\t\t\t\tmatrix[y][x] = 1\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Сколько всего убитых кораблей?\r\n\tconst totalKilledShips = numberOfKilledShipsOfEachSize.reduce(\r\n\t\t(acc, item) => acc + item[1],\r\n\t\t0\r\n\t)\r\n\r\n\t/*\r\n\t\tВ массиве оставляем только количество не полностью убитых кораблей\r\n\t\tодинакового размера.\r\n\t*/\r\n\tnumberOfKilledShipsOfEachSize = numberOfKilledShipsOfEachSize.filter(\r\n\t\titem => item[0] !== 5 - item[1]\r\n\t)\r\n\r\n\t// console.log(\r\n\t// \t'numberOfKilledShipsOfEachSize: ',\r\n\t// \tnumberOfKilledShipsOfEachSize\r\n\t// )\r\n\r\n\t/*\r\n\t\tЕсли на поле остались недобитыми только корабли одного размера\r\n\t\tи это не одиночные корабли:\r\n\t*/\r\n\tif (\r\n\t\tnumberOfKilledShipsOfEachSize.length === 1 &&\r\n\t\tnumberOfKilledShipsOfEachSize[0][0] !== 1\r\n\t) {\r\n\t\t// console.log(\r\n\t\t// \t'На этом этапе можно прикинуть, в каких ячейках точно не будет кораблей'\r\n\t\t// )\r\n\t\t// Создаём массив ячеек с ранеными палубами.\r\n\t\tconst cellsWithWoundedDecks = []\r\n\r\n\t\tfor (const ship of ships) {\r\n\t\t\tconst { direction, length } = ship\r\n\r\n\t\t\t/* Если корабль НЕ убит: */\r\n\t\t\tif (!ship.killed) {\r\n\t\t\t\tif (direction === 'row') {\r\n\t\t\t\t\tfor (let y = ship.y - 1; y <= ship.y + 1; y++) {\r\n\t\t\t\t\t\tfor (let x = ship.x - 1; x <= ship.x + length; x++) {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tshots.find(shot => shot.x === x && shot.y === y)\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tcellsWithWoundedDecks.push([x, y])\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let y = ship.y - 1; y <= ship.y + length; y++) {\r\n\t\t\t\t\t\tfor (let x = ship.x - 1; x <= ship.x + 1; x++) {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tshots.find(shot => shot.x === x && shot.y === y)\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tcellsWithWoundedDecks.push([x, y])\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// console.log('cellsWithWoundedDecks: ', cellsWithWoundedDecks)\r\n\r\n\t\t/*\r\n\t\t\tЕсли количество раненых ячеек равно 3 для двухпалубных и\r\n\t\t\tтрёхпалубных кораблей, и 1 или более для четырёхпалубного, отмечаем\r\n\t\t\tпустыми те ячейки, которые находятся далее расстояния равного длине\r\n\t\t\tоставшихся недобитыми кораблей - 1 от подбитых палуб.\r\n\t\t*/\r\n\t\tif (\r\n\t\t\t(numberOfKilledShipsOfEachSize[0][0] === 2 &&\r\n\t\t\t\t(cellsWithWoundedDecks.length >= 3 ||\r\n\t\t\t\t\t(cellsWithWoundedDecks.length >= 2 &&\r\n\t\t\t\t\t\ttotalKilledShips === 8) ||\r\n\t\t\t\t\t(cellsWithWoundedDecks.length === 1 &&\r\n\t\t\t\t\t\ttotalKilledShips === 9))) ||\r\n\t\t\t(numberOfKilledShipsOfEachSize[0][0] === 3 &&\r\n\t\t\t\t(cellsWithWoundedDecks.length >= 3 ||\r\n\t\t\t\t\t(cellsWithWoundedDecks.length >= 1 &&\r\n\t\t\t\t\t\ttotalKilledShips === 9))) ||\r\n\t\t\t(numberOfKilledShipsOfEachSize[0][0] === 4 &&\r\n\t\t\t\tcellsWithWoundedDecks.length >= 1)\r\n\t\t) {\r\n\t\t\t/*\r\n\t\t\t\tСоздаём вспомогательную матрицу.\r\n\t\t\t\tВ ней отметим ячейки, в которых могут быть палубы кораблей.\r\n\t\t\t\tЗначение 'psbl' - может быть палуба корабля.\r\n\t\t\t*/\r\n\t\t\tconst mapOfAllowedCells = Array(10)\r\n\t\t\t\t.fill()\r\n\t\t\t\t.map(() => Array(10).fill(null))\r\n\r\n\t\t\t/*\r\n\t\t\t\tОтмечаем пустыми те ячейки, которые находятся далее расстояния\r\n\t\t\t\tравного длине оставшихся недобитыми кораблей - 1 от подбитых палуб.\r\n\t\t\t*/\r\n\t\t\t// Расстояние, в пределах которого возможно размещение палуб корабля.\r\n\t\t\tconst allowableDistance = numberOfKilledShipsOfEachSize[0][0] - 1\r\n\r\n\t\t\t// Отметим ячейки, в которых могут быть палубы кораблей.\r\n\t\t\tcellsWithWoundedDecks.forEach(([x, y]) => {\r\n\t\t\t\tfor (\r\n\t\t\t\t\tlet dy = y - allowableDistance;\r\n\t\t\t\t\tdy <= y + allowableDistance;\r\n\t\t\t\t\tdy++\r\n\t\t\t\t) {\r\n\t\t\t\t\tfor (\r\n\t\t\t\t\t\tlet dx = x - allowableDistance;\r\n\t\t\t\t\t\tdx <= x + allowableDistance;\r\n\t\t\t\t\t\tdx++\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t// console.log('dx: ', dx, 'dy: ', dy)\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t// isValidCoordinates(x, y) &&\r\n\t\t\t\t\t\t\tisValidCoordinates(dx, dy) &&\r\n\t\t\t\t\t\t\tdx !== x &&\r\n\t\t\t\t\t\t\tdy !== y\r\n\t\t\t\t\t\t\t// !cellsWithWoundedDecks.includes([dx][dy]) &&\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tif (matrix[dy][dx] === 0) {\r\n\t\t\t\t\t\t\t\tmapOfAllowedCells[dy][dx] = 'psbl'\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tmapOfAllowedCells[dy][dx] = null\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t// console.log('mapOfAllowedCells: ', mapOfAllowedCells)\r\n\t\t\t// console.log(matrix)\r\n\r\n\t\t\tfor (let y = 0; y < 10; y++) {\r\n\t\t\t\tfor (let x = 0; x < 10; x++) {\r\n\t\t\t\t\tif (mapOfAllowedCells[y][x] !== 'psbl') {\r\n\t\t\t\t\t\tmatrix[y][x] = 1\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst freeCells = []\r\n\tfor (let y = 0; y < 10; y++) {\r\n\t\tfor (let x = 0; x < 10; x++) {\r\n\t\t\tif (matrix[y][x] === 0) {\r\n\t\t\t\tfreeCells.push({ x, y })\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (freeCells.length === 0) {\r\n\t\treturn 'no free cells'\r\n\t}\r\n\r\n\treturn freeCells[Math.floor(Math.random() * freeCells.length)]\r\n}\r\n","/*     Состояние игры с ботом.     */\r\n\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport { getShotedCell, randomize, shoot as doShoot } from '../additional'\r\n\r\nconst initialState = {\r\n\tplayerShips: [],\r\n\tplayerShots: [],\r\n\r\n\tbotShips: randomize().map(ship => ({ ...ship, placed: true })),\r\n\tbotShots: [],\r\n\r\n\tplaying: true,\r\n\tplayerWin: true,\r\n}\r\n\r\nexport const botSlice = createSlice({\r\n\tname: 'bot',\r\n\r\n\tinitialState,\r\n\r\n\treducers: {\r\n\t\t/*\r\n\t\t\tФункция принимает текущее состояние пользователя\r\n\t\t\tи обновляет все другие состояния.\r\n\t\t*/\r\n\t\treset(state, action) {\r\n\t\t\tObject.assign(state, {\r\n\t\t\t\t...initialState,\r\n\r\n\t\t\t\tbotShips: randomize().map(ship => ({ ...ship, placed: true })),\r\n\r\n\t\t\t\tplayerShips: action.payload,\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\t// Функция добавляет выстрел на поле.\r\n\t\tshoot(state, action) {\r\n\t\t\tif (!state.playing) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tconst shot = doShoot(\r\n\t\t\t\tstate.botShips,\r\n\t\t\t\tstate.botShots,\r\n\t\t\t\taction.payload.x,\r\n\t\t\t\taction.payload.y\r\n\t\t\t)\r\n\r\n\t\t\tif (!shot) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\t// Если игрок попал в корабль:\r\n\t\t\tif (shot.status === 'hitted') {\r\n\t\t\t\tconst playerWin = state.botShips.every(ship => ship.killed)\r\n\r\n\t\t\t\tif (playerWin) {\r\n\t\t\t\t\tstate.playing = false\r\n\t\t\t\t\tstate.playerWin = true\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\t// Ход ли бота сейчас?\r\n\t\t\tlet botTurn = true\r\n\t\t\twhile (botTurn) {\r\n\t\t\t\tbotTurn = false\r\n\r\n\t\t\t\t// Если игрок не попал в корабль, ход переходит к боту.\r\n\t\t\t\tconst freeCell = getShotedCell(\r\n\t\t\t\t\tstate.playerShips,\r\n\t\t\t\t\tstate.playerShots\r\n\t\t\t\t)\r\n\r\n\t\t\t\tif (freeCell !== 'no free cells') {\r\n\t\t\t\t\tconst shot = doShoot(\r\n\t\t\t\t\t\tstate.playerShips,\r\n\t\t\t\t\t\tstate.playerShots,\r\n\t\t\t\t\t\tfreeCell.x,\r\n\t\t\t\t\t\tfreeCell.y\r\n\t\t\t\t\t)\r\n\r\n\t\t\t\t\tif (!shot) {\r\n\t\t\t\t\t\tthrow Error('Бот не может сюда стрелять.')\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Если бот попал в корабль:\r\n\t\t\t\t\tif (shot.status === 'hitted') {\r\n\t\t\t\t\t\tbotTurn = true\r\n\r\n\t\t\t\t\t\tconst botWin = state.playerShips.every(\r\n\t\t\t\t\t\t\tship => ship.killed\r\n\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\tif (botWin) {\r\n\t\t\t\t\t\t\tstate.playing = false\r\n\t\t\t\t\t\t\tstate.playerWin = false\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport const { reset, shoot } = botSlice.actions\r\n\r\nexport default botSlice.reducer\r\n","import styles from './styles.module.css'\r\nimport { BattleField, BattleFieldTable, Ship, Shot } from '../components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useEffect, useMemo, useState } from 'react'\r\nimport { reset, shoot } from '../store/bot'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst BotPage = () => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst state = useSelector(state => state.bot)\r\n\t// Стартовое состояние кораблей пользователя.\r\n\tconst defaultShips = useSelector(state => state.main.ships)\r\n\r\n\tconst [showBot, setShowBot] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(reset(defaultShips))\r\n\t}, [defaultShips, dispatch])\r\n\r\n\tconst status = useMemo(() => {\r\n\t\tif (state.playing) {\r\n\t\t\treturn (\r\n\t\t\t\t<span style={{ textAlign: 'center', fontSize: '30px' }}>\r\n\t\t\t\t\tВаш ход!\r\n\t\t\t\t</span>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tif (state.playerWin) {\r\n\t\t\treturn (\r\n\t\t\t\t<span style={{ textAlign: 'center', fontSize: '30px' }}>\r\n\t\t\t\t\tПоздравляю с победой!\r\n\t\t\t\t</span>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<span style={{ textAlign: 'center', fontSize: '30px' }}>\r\n\t\t\t\tУвы, вы проиграли.\r\n\t\t\t</span>\r\n\t\t)\r\n\t}, [state.playerWin, state.playing])\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<div className={styles['main-content']}>\r\n\t\t\t\t<BattleField>\r\n\t\t\t\t\t<BattleFieldTable\r\n\t\t\t\t\t\t// columns={12}\r\n\t\t\t\t\t\t// rows={5}\r\n\t\t\t\t\t\t// signed={false}\r\n\t\t\t\t\t\taxisX={n => n + 1}\r\n\t\t\t\t\t\t// axisY ={n => 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[n]}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t{state.playerShips.map(ship => (\r\n\t\t\t\t\t\t<Ship key={ship.id} {...ship} />\r\n\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t{state.playerShots.map(shot => (\r\n\t\t\t\t\t\t<Shot key={shot.id} {...shot} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</BattleField>\r\n\r\n\t\t\t\t<div className={styles['main-actions']}>\r\n\t\t\t\t\t{status}\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={styles.action}\r\n\t\t\t\t\t\tonClick={() => dispatch(reset(defaultShips))}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tПереиграть\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={styles.action}\r\n\t\t\t\t\t\tonClick={() => setShowBot(x => !x)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tПоказать бота\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<Link to='/'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName={styles.action}\r\n\t\t\t\t\t\t\tonClick={() => dispatch(reset(defaultShips))}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tСдаться\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<BattleField>\r\n\t\t\t\t\t<BattleFieldTable\r\n\t\t\t\t\t\thovered\r\n\t\t\t\t\t\tonClick={(x, y) => dispatch(shoot({ x, y }))}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/* \r\n\t\t\t\t\t\tВидим убитые корабли либо все, если включен режим\r\n\t\t\t\t\t\tотображения кораблей \r\n\t\t\t\t\t*/}\r\n\t\t\t\t\t{state.botShips\r\n\t\t\t\t\t\t.filter(ship => ship.killed || showBot)\r\n\t\t\t\t\t\t.map(ship => (\r\n\t\t\t\t\t\t\t<Ship key={ship.id} {...ship} />\r\n\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t{state.botShots.map(shot => (\r\n\t\t\t\t\t\t<Shot key={shot.id} {...shot} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</BattleField>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default BotPage\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { getDefaultShips, isNormalPosition, randomize } from '../additional'\r\n\r\nconst initialState = {\r\n\tships: getDefaultShips(),\r\n}\r\n\r\nexport const editorSlice = createSlice({\r\n\tname: 'editor',\r\n\r\n\tinitialState,\r\n\r\n\treducers: {\r\n\t\t// Функция принимает массив кораблей и выставляет на поле.\r\n\t\tsetShips(state, action) {\r\n\t\t\tstate.ships = action.payload\r\n\t\t},\r\n\r\n\t\t// Функция ставит корабль на поле для расстановки.\r\n\t\tplace(state, action) {\r\n\t\t\t// id корабля, координаты ячейки, на которую хотим его разместить.\r\n\t\t\tconst { id, x, y } = action.payload\r\n\r\n\t\t\t/*\r\n\t\t\t\tКорабли, которые уже расположены, кроме того,\r\n\t\t\t\tкоторый сейчас хотим расположить.\r\n\t\t\t*/\r\n\t\t\tconst placed = state.ships.filter(\r\n\t\t\t\tship => ship.placed && ship.id !== id\r\n\t\t\t)\r\n\r\n\t\t\t// Располагаемый корабль.\r\n\t\t\tconst ship = state.ships.find(ship => ship.id === id)\r\n\r\n\t\t\t// Будут ли корабли с учётом располагаемого корабля стоять допустимо?\r\n\t\t\tconst normal = isNormalPosition([...placed, { ...ship, x, y }])\r\n\t\t\tif (normal) {\r\n\t\t\t\tObject.assign(ship, { x, y, placed: true })\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Функция ставит корабль в док.\r\n\t\tdock(state, action) {\r\n\t\t\tconst id = action.payload\r\n\r\n\t\t\tconst defaultShip = getDefaultShips().find(ship => ship.id === id)\r\n\t\t\tconst ship = state.ships.find(ship => ship.id === id)\r\n\r\n\t\t\tif (ship && defaultShip) {\r\n\t\t\t\tObject.assign(ship, defaultShip)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Функция расставляет корабли случайным образом.\r\n\t\trandom(state) {\r\n\t\t\tstate.ships = randomize()\r\n\t\t\tfor (const ship of state.ships) {\r\n\t\t\t\tship.placed = true\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Функция возвращает корабли в док.\r\n\t\treset(state) {\r\n\t\t\tstate.ships = getDefaultShips()\r\n\t\t},\r\n\r\n\t\t// Функция поворачивает переданный корабль.\r\n\t\trotate(state, action) {\r\n\t\t\t// id корабля, который хотим повернуть.\r\n\t\t\tconst { id, mouseX, mouseY, cellSize } = action.payload\r\n\r\n\t\t\t// Поворачиваемый корабль.\r\n\t\t\tconst ship = state.ships.find(ship => ship.id === id)\r\n\r\n\t\t\tif (!ship || ship.length === 1) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tif (!ship.placed) {\r\n\t\t\t\tship.direction = ship.direction === 'row' ? 'column' : 'row'\r\n\t\t\t} else {\r\n\t\t\t\tconst shipElem = document.querySelector(\r\n\t\t\t\t\t`[class^=styles_ship]:nth-child(${ship.id + 1})`\r\n\t\t\t\t)\r\n\r\n\t\t\t\tconst { left: shipCoordinatesLeft, top: shipCoordinatesTop } =\r\n\t\t\t\t\tshipElem.getBoundingClientRect()\r\n\r\n\t\t\t\tlet newShipX = null\r\n\t\t\t\tlet newShipY = null\r\n\t\t\t\tlet cellByWhichToRotate = null\r\n\r\n\t\t\t\tif (ship.direction === 'row') {\r\n\t\t\t\t\tcellByWhichToRotate = Math.floor(\r\n\t\t\t\t\t\t(mouseX - shipCoordinatesLeft) / cellSize\r\n\t\t\t\t\t)\r\n\t\t\t\t\tif (cellByWhichToRotate === ship.length) {\r\n\t\t\t\t\t\tcellByWhichToRotate--\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnewShipX = ship.x + cellByWhichToRotate\r\n\t\t\t\t\tnewShipY = ship.y - cellByWhichToRotate\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcellByWhichToRotate = Math.floor(\r\n\t\t\t\t\t\t(mouseY - shipCoordinatesTop) / cellSize\r\n\t\t\t\t\t)\r\n\t\t\t\t\tif (cellByWhichToRotate === ship.length) {\r\n\t\t\t\t\t\tcellByWhichToRotate--\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnewShipX = ship.x - cellByWhichToRotate\r\n\t\t\t\t\tnewShipY = ship.y + cellByWhichToRotate\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t\tКорабли, которые уже расположены, кроме того,\r\n\t\t\t\t\tкоторый сейчас хотим повернуть.\r\n\t\t\t\t*/\r\n\t\t\t\tconst placed = state.ships.filter(\r\n\t\t\t\t\tship => ship.placed && ship.id !== id\r\n\t\t\t\t)\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t\tБудут ли корабли с учётом поворачиваемого корабля\r\n\t\t\t\t\tстоять допустимо?\r\n\t\t\t\t*/\r\n\t\t\t\tconst normal = isNormalPosition([\r\n\t\t\t\t\t...placed,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t...ship,\r\n\t\t\t\t\t\tdirection: ship.direction === 'row' ? 'column' : 'row',\r\n\t\t\t\t\t\tx: newShipX,\r\n\t\t\t\t\t\ty: newShipY,\r\n\t\t\t\t\t},\r\n\t\t\t\t])\r\n\r\n\t\t\t\tif (normal) {\r\n\t\t\t\t\tship.direction = ship.direction === 'row' ? 'column' : 'row'\r\n\t\t\t\t\tship.x = newShipX\r\n\t\t\t\t\tship.y = newShipY\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport const { place, dock, random, reset, rotate, setShips } =\r\n\teditorSlice.actions\r\n\r\nexport default editorSlice.reducer\r\n","/*     Главное состояние.     */\r\n\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport { randomize } from '../additional'\r\n\r\nconst initialState = {\r\n\tships: randomize().map(ship => ({...ship, placed: true})),\r\n}\r\n\r\nexport const mainSlice = createSlice({\r\n\tname: 'main',\r\n\r\n\tinitialState,\r\n\r\n\treducers: {\r\n\t\t// Функция принимает массив кораблей и выставляет на поле.\r\n\t\tsetShips(state, action) {\r\n\t\t\tstate.ships = action.payload\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport const { setShips } = mainSlice.actions\r\n\r\nexport default mainSlice.reducer\r\n","import { useCallback } from 'react'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { BattleFieldEditor } from '../components'\r\nimport { place, dock, random, reset, rotate, setShips } from '../store/editor'\r\nimport { setShips as setDefaultShips } from '../store/main'\r\nimport styles from './styles.module.css'\r\n\r\n// Страница с редактором игры.\r\nconst EditorPage = () => {\r\n\t/*\r\n\t\tКорабли из состояния главной страницы, которые расставились\r\n\t\tавтоматически при загрузке страницы.\r\n\t*/\r\n\tconst defaultShips = useSelector(state => state.main.ships)\r\n\r\n\tconst ships = useSelector(state => state.editor.ships)\r\n\tconst dispatch = useDispatch()\r\n\tconst history = useHistory()\r\n\r\n\t// Расставлены ли все корабли?\r\n\tconst placed = useMemo(() => ships.every(ship => ship.placed), [ships])\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(setShips(defaultShips))\r\n\t}, [defaultShips, dispatch])\r\n\r\n\t// Обработчик клика по кнопке \"Сохранить\".\r\n\tconst clickHandler = useCallback(() => {\r\n\t\tdispatch(setDefaultShips(ships))\r\n\t\thistory.push('/')\r\n\t}, [dispatch, history, ships])\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<div className={styles['battlefield-constructor']}>\r\n\t\t\t\t{/*\r\n\t\t\t\t\tОбработчик onPlace принимает id корабля и координаты,\r\n\t\t\t\t\tкуда его нужно сбросить.\r\n\t\t\t\t\tОбработчик onDock принимает id корабля.\r\n\t\t\t\t*/}\r\n\t\t\t\t<BattleFieldEditor\r\n\t\t\t\t\tships={ships}\r\n\t\t\t\t\tonPlace={(id, x, y) => dispatch(place({ id, x, y }))}\r\n\t\t\t\t\tonDock={id => dispatch(dock(id))}\r\n\t\t\t\t\tonRotate={(id, mouseX, mouseY, cellSize) =>\r\n\t\t\t\t\t\tdispatch(rotate({ id, mouseX, mouseY, cellSize }))\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles['editor-actions']}>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName={styles.action}\r\n\t\t\t\t\tonClick={() => dispatch(reset())}\r\n\t\t\t\t>\r\n\t\t\t\t\tСбросить\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName={styles.action}\r\n\t\t\t\t\tonClick={() => dispatch(random())}\r\n\t\t\t\t>\r\n\t\t\t\t\tСлучайно\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName={styles.action}\r\n\t\t\t\t\tdisabled={!placed}\r\n\t\t\t\t\tonClick={clickHandler}\r\n\t\t\t\t>\r\n\t\t\t\t\tСохранить\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default EditorPage\r\n","/*     Состояние игры онлайн.     */\r\n\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst getInitialState = () => ({\r\n\tkey: '',\r\n\tplayer1: null,\r\n\tships1: [],\r\n\tshots1: [],\r\n\tplayer2: null,\r\n\tships2: [],\r\n\tshots2: [],\r\n\twaiting: true,\r\n\tplaying: false,\r\n\tplayer1Turn: true,\r\n\tplayer1Win: false,\r\n\tincorrect: false,\r\n})\r\n\r\nexport const partySlice = createSlice({\r\n\tname: 'party',\r\n\r\n\tinitialState: getInitialState(),\r\n\r\n\treducers: {\r\n\t\treset(state, action) {\r\n\t\t\tObject.assign(state, getInitialState(), {\r\n\t\t\t\t// key: state.key,\r\n\t\t\t\tships1: action.payload,\r\n\t\t\t})\r\n\t\t},\r\n\t\t/*\r\n\t\t\tФункция обновляет состояние партии.\r\n\t\t*/\r\n\t\tupdate(state, action) {\r\n\t\t\tObject.assign(state, action.payload)\r\n\t\t},\r\n\r\n\t\t// Функция сообщает об ошибке.\r\n\t\tincorrect(state) {\r\n\t\t\tstate.incorrect = true\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport const { reset, update, incorrect } = partySlice.actions\r\n\r\nexport default partySlice.reducer\r\n","import styles from './styles.module.css'\r\nimport { BattleField, BattleFieldTable, Ship } from '../components'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useEffect } from 'react'\r\nimport { reset } from '../store/party'\r\n\r\nconst MainPage = () => {\r\n\t// Стартовое состояние кораблей пользователя.\r\n\tconst ships = useSelector(state => state.main.ships)\r\n\tconst dispatch = useDispatch()\r\n\r\n\tuseEffect(() => {\r\n\t\t// Расстановка кораблей случайным образом.\r\n\t\tdispatch(reset(ships))\r\n\t}, [dispatch, ships])\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<div className={styles['main-content']}>\r\n\t\t\t\t<BattleField>\r\n\t\t\t\t\t<BattleFieldTable\r\n\t\t\t\t\t\t// columns={12}\r\n\t\t\t\t\t\t// rows={5}\r\n\t\t\t\t\t\t// signed={false}\r\n\t\t\t\t\t\taxisX={n => n + 1}\r\n\t\t\t\t\t\t// axisY ={n => 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[n]}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t{ships.map(ship => (\r\n\t\t\t\t\t\t<Ship key={ship.id} {...ship} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</BattleField>\r\n\r\n\t\t\t\t<div className={styles['main-actions']}>\r\n\t\t\t\t\t<Link to='/editor'>\r\n\t\t\t\t\t\t<button className={styles.action}>Редактировать</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to='/bot'>\r\n\t\t\t\t\t\t<button className={styles.action}>\r\n\t\t\t\t\t\t\tИграть с ботом\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to='/party'>\r\n\t\t\t\t\t\t<button className={styles.action}>Играть онлайн</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to='/challenge'>\r\n\t\t\t\t\t\t<button className={styles.action}>Бросить вызов</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<BattleField>\r\n\t\t\t\t\t<BattleFieldTable />\r\n\t\t\t\t</BattleField>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MainPage\r\n","// Хранилище для Redux.\r\n\r\nimport { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport botReducer from './bot'\r\nimport editorReducer from './editor'\r\nimport mainReducer from './main'\r\nimport partyReducer from './party'\r\n\r\nexport const store = configureStore({\r\n\treducer: {\r\n\t\tbot: botReducer,\r\n\t\teditor: editorReducer,\r\n\t\tmain: mainReducer,\r\n\t\tparty: partyReducer,\r\n\t},\r\n})\r\n\r\nexport default store\r\n\r\nconst { dispatch } = store\r\nexport { dispatch }\r\n","// Работа с сокетами. Прослушка событий сокетов. Работа с методами сокетов.\r\n\r\n// Client Initialization\r\nimport { io } from 'socket.io-client'\r\nimport { dispatch } from './store'\r\nimport { incorrect, update } from './store/party'\r\nconst socket = io()\r\n\r\n/* Клиент слушает socket события */\r\n\r\n// Обновление состояния партии\r\nsocket.on('party.update', party => dispatch(update(party)))\r\n\r\n// Ошибка. Чаще всего вызывается из-за неверного ship массива.\r\nsocket.on('party.incorrect', () => dispatch(incorrect()))\r\n\r\n/* Сервер слушает socket события */\r\n\r\n// Поиск случайной партии. Принимает массив кораблей.\r\nexport const find = ships => socket.emit('party.find', ships)\r\n\r\n/*\r\n    Бросить/принять вызов. Первый аргумент массив кораблей.\r\n    Второй аргумент не обязательный ключ принимаемого вызова.\r\n*/\r\nexport const challenge = (ships, key) =>\r\n\tsocket.emit('party.challenge', ships, key)\r\n\r\n// Сдаться\r\nexport const surrender = () => socket.emit('party.surrender')\r\n\r\n// Выйти из партии (сдаться если соперник все еще в партии)\r\nexport const exit = () => socket.emit('party.exit')\r\n\r\n// Выстрел. Принимает координаты выстрела.\r\nexport const shot = (x, y) => socket.emit('party.shot', x, y)\r\n","import styles from './styles.module.css'\r\nimport { BattleField, BattleFieldTable, Ship, Shot } from '../components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useCallback, useEffect, useMemo } from 'react'\r\nimport { exit, find, challenge as socketChallenge, shot } from '../socket'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PartyPage = props => {\r\n\tconst { challenge } = props\r\n\r\n\tconst dispatch = useDispatch()\r\n\tconst history = useHistory()\r\n\tconst { key } = useParams()\r\n\r\n\tconst state = useSelector(state => state.party)\r\n\t// Стартовое состояние кораблей пользователя.\r\n\tconst defaultShips = useSelector(state => state.main.ships)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (challenge) {\r\n\t\t\tif (key) {\r\n\t\t\t\t// Принять вызов.\r\n\t\t\t\tsocketChallenge(defaultShips, key)\r\n\t\t\t} else {\r\n\t\t\t\t// Бросить вызов.\r\n\t\t\t\tsocketChallenge(defaultShips, key)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Сообщить бэкэнду о том, что пользователь ищет соперника.\r\n\t\t\tfind(defaultShips)\r\n\t\t}\r\n\t}, [challenge, defaultShips, dispatch, key, state.key])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (challenge) {\r\n\t\t\thistory.push({ pathname: `/challenge/${state.key}` })\r\n\t\t}\r\n\t}, [challenge, history, state.key])\r\n\r\n\t// Ссылка на созданную партию.\r\n\tconst href = window.location.href\r\n\r\n\tconst status = useMemo(() => {\r\n\t\tif (state.waiting) {\r\n\t\t\tif (challenge) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div style={{ textAlign: 'center', fontSize: '30px' }}>\r\n\t\t\t\t\t\t<span>Ищем соперника</span>\r\n\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tfontSize: '14px',\r\n\t\t\t\t\t\t\t\tmarginTop: '15px',\r\n\t\t\t\t\t\t\t\tuserSelect: 'text',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{href}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{ textAlign: 'center', fontSize: '30px' }}>\r\n\t\t\t\t\t<span>Ищем соперника</span>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tif (state.playing) {\r\n\t\t\tif (state.player1Turn) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<span style={{ textAlign: 'center', fontSize: '30px' }}>\r\n\t\t\t\t\t\tВаш ход!\r\n\t\t\t\t\t</span>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<span style={{ textAlign: 'center', fontSize: '30px' }}>\r\n\t\t\t\t\tХод соперника\r\n\t\t\t\t</span>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tif (state.player1Win) {\r\n\t\t\treturn (\r\n\t\t\t\t<span style={{ textAlign: 'center', fontSize: '30px' }}>\r\n\t\t\t\t\tПоздравляю с победой!\r\n\t\t\t\t</span>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<span style={{ textAlign: 'center', fontSize: '30px' }}>\r\n\t\t\t\tУвы, вы проиграли.\r\n\t\t\t</span>\r\n\t\t)\r\n\t}, [\r\n\t\tchallenge,\r\n\t\thref,\r\n\t\tstate.player1Turn,\r\n\t\tstate.player1Win,\r\n\t\tstate.playing,\r\n\t\tstate.waiting,\r\n\t])\r\n\r\n\t// Обработчик выхода из онлайн-партии.\r\n\tconst onExit = useCallback(() => {\r\n\t\texit()\r\n\t\thistory.push('/')\r\n\t}, [history])\r\n\r\n\t// Если что-то пошло не так (ошибка):\r\n\tif (state.incorrect) {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={styles['main-actions']}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tjustifyContent: 'space-evenly',\r\n\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\tminHeight: '200px',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<span style={{ textAlign: 'center', fontSize: '30px' }}>\r\n\t\t\t\t\tЧто-то пошло не так!\r\n\t\t\t\t</span>\r\n\t\t\t\t<Link to='/'>\r\n\t\t\t\t\t<button className={styles.action}>Вернуться</button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<div className={styles['main-content']}>\r\n\t\t\t\t<BattleField>\r\n\t\t\t\t\t<BattleFieldTable\r\n\t\t\t\t\t\t// columns={12}\r\n\t\t\t\t\t\t// rows={5}\r\n\t\t\t\t\t\t// signed={false}\r\n\t\t\t\t\t\taxisX={n => n + 1}\r\n\t\t\t\t\t\t// axisY ={n => 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[n]}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t{state.ships1.map(ship => (\r\n\t\t\t\t\t\t<Ship key={ship.id} {...ship} />\r\n\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t{/* Выстрелы по первому игроку. */}\r\n\t\t\t\t\t{state.shots1.map(shot => (\r\n\t\t\t\t\t\t<Shot key={shot.id} {...shot} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</BattleField>\r\n\r\n\t\t\t\t<div className={styles['main-actions']}>\r\n\t\t\t\t\t{status}\r\n\r\n\t\t\t\t\t<button className={styles.action} onClick={onExit}>\r\n\t\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\t\tif (state.waiting) {\r\n\t\t\t\t\t\t\t\treturn 'Выйти'\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn state.playing ? 'Сдаться' : 'Выйти'\r\n\t\t\t\t\t\t})()}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<BattleField>\r\n\t\t\t\t\t<BattleFieldTable\r\n\t\t\t\t\t\thovered\r\n\t\t\t\t\t\tonClick={(x, y) => shot(x, y)}\r\n\t\t\t\t\t\t// columns={12}\r\n\t\t\t\t\t\t// rows={5}\r\n\t\t\t\t\t\t// signed={false}\r\n\t\t\t\t\t\taxisX={n => n + 1}\r\n\t\t\t\t\t\t// axisY ={n => 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[n]}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t{state.ships2.map(ship => (\r\n\t\t\t\t\t\t<Ship key={ship.id} {...ship} />\r\n\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t{/* Выстрелы по второму игроку. */}\r\n\t\t\t\t\t{state.shots2.map(shot => (\r\n\t\t\t\t\t\t<Shot key={shot.id} {...shot} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</BattleField>\r\n\t\t\t</div>\r\n\t\t\t<pre>{JSON.stringify(state, null, 3)}</pre>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PartyPage\r\n","import { Switch, Route } from 'react-router-dom'\r\nimport { BotPage, EditorPage, MainPage, PartyPage } from './pages'\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route\r\n\t\t\t\texact\r\n\t\t\t\tpath='/challenge/:key'\r\n\t\t\t\trender={() => <PartyPage challenge />}\r\n\t\t\t/>\r\n\t\t\t<Route\r\n\t\t\t\texact\r\n\t\t\t\tpath='/challenge/'\r\n\t\t\t\trender={() => <PartyPage challenge />}\r\n\t\t\t/>\r\n\t\t\t<Route path='/party' component={PartyPage} />\r\n\t\t\t<Route path='/editor' component={EditorPage} />\r\n\t\t\t<Route path='/bot' component={BotPage} />\r\n\t\t\t<Route path='/' component={MainPage} />\r\n\t\t</Switch>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { SeaBattle } from './components'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport { DndProvider } from 'react-dnd'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './socket'\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<DndProvider backend={HTML5Backend}>\r\n\t\t\t\t\t<SeaBattle cellSize={30}>\r\n\t\t\t\t\t\t<App />\r\n\t\t\t\t\t</SeaBattle>\r\n\t\t\t\t</DndProvider>\r\n\t\t\t</BrowserRouter>\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"battlefield\":\"styles_battlefield__fRIp4\",\"battlefield-table\":\"styles_battlefield-table__eKNBB\",\"battlefield-item\":\"styles_battlefield-item__vlGdH\",\"battlefield-item__hovered\":\"styles_battlefield-item__hovered__3oNCD\",\"battlefield-status\":\"styles_battlefield-status__20FMn\",\"marker\":\"styles_marker__2TRJF\",\"ship\":\"styles_ship__1YzKc\",\"ship-killed\":\"styles_ship-killed__9GLAX\",\"shot\":\"styles_shot__3Nhoa\",\"shot-missed\":\"styles_shot-missed__2_MfZ\",\"shot-hitted\":\"styles_shot-hitted__k_Ot7\",\"dock\":\"styles_dock__3wC36\",\"battlefield-constructor\":\"styles_battlefield-constructor__20kD6\"};"],"sourceRoot":""}