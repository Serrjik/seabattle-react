{"version":3,"sources":["components/styles.module.css","pages/BotPage.jsx","components/BattleField.jsx","components/SeaBattle.jsx","hooks/useSeaBattle.js","components/BattleFieldTable.jsx","components/Dock.jsx","components/Ship.jsx","components/DraggableShip.jsx","components/BattleFieldEditor.jsx","additional.js","store/editor.js","store/main.js","pages/EditorPage.jsx","pages/MainPage.jsx","App.js","reportWebVitals.js","store/index.js","index.js","pages/styles.module.css"],"names":["module","exports","BotPage","BattleField","props","children","style","className","styles","battlefield","SeaBattleContext","createContext","SeaBattle","cellSize","value","useMemo","Provider","defaultProps","useSeaBattle","useContext","BattleFieldTable","forwardRef","ref","columns","rows","signed","axisX","axisY","matrix","y","row","x","item","push","map","markerX","markerY","marker","left","top","width","height","n","Dock","dock","Ship","length","direction","killed","onClick","along","across","offsetX","offsetY","classNames","ship","DraggableShip","id","useDrag","type","collect","monitor","isDragging","collected","drag","onclick","BattleFieldEditor","ships","onPlace","onDock","onRotate","dockedShips","filter","placed","placedShips","placeRef","useRef","useDrop","accept","drop","dockDrop","mouseStart","getInitialClientOffset","mouseFinish","getClientOffset","shipStart","getInitialSourceClientOffset","diff","rect","current","getBoundingClientRect","Math","floor","placeDrop","isValidCoordinates","isNormalPosition","Array","fill","dx","dy","i","randomize","random","initialState","editorSlice","createSlice","name","reducers","setShips","state","action","payload","place","find","Object","assign","defaultShip","reset","rotate","actions","mainSlice","EditorPage","defaultShips","useSelector","main","editor","dispatch","useDispatch","history","useHistory","every","useEffect","clickHandler","useCallback","setDefaultShips","container","disabled","MainPage","to","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","editorReducer","mainReducer","ReactDOM","render","StrictMode","DndProvider","backend","HTML5Backend","document","getElementById"],"mappings":"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","file":"static/js/main.c6ac0053.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"battlefield\":\"styles_battlefield__fRIp4\",\"battlefield-table\":\"styles_battlefield-table__eKNBB\",\"battlefield-item\":\"styles_battlefield-item__vlGdH\",\"battlefield-item__hovered\":\"styles_battlefield-item__hovered__3oNCD\",\"battlefield-status\":\"styles_battlefield-status__20FMn\",\"marker\":\"styles_marker__2TRJF\",\"ship\":\"styles_ship__1YzKc\",\"ship-killed\":\"styles_ship-killed__9GLAX\",\"shot\":\"styles_shot__3Nhoa\",\"shot-missed\":\"styles_shot-missed__2_MfZ\",\"shot-hitted\":\"styles_shot-hitted__k_Ot7\",\"dock\":\"styles_dock__3wC36\",\"battlefield-constructor\":\"styles_battlefield-constructor__20kD6\"};","const BotPage = () => {\r\n\treturn <p>BotPage</p>\r\n}\r\n\r\nexport default BotPage","import styles from './styles.module.css'\r\n\r\n// Этот компонент объединит в себе BattleFieldTable, Ship, Shot.\r\nconst BattleField = props => {\r\n\tconst { children, style = {} } = props\r\n\r\n\treturn (\r\n\t\t<div className={styles.battlefield} style={style}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default BattleField\r\n","import { createContext, useMemo } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const SeaBattleContext = createContext()\r\n\r\nconst SeaBattle = props => {\r\n\tconst { cellSize, children } = props\r\n\t// Размер ячейки игрового поля.\r\n\tconst value = useMemo(() => ({ cellSize }), [cellSize])\r\n\r\n\treturn (\r\n\t\t<SeaBattleContext.Provider value={value}>\r\n\t\t\t{children}\r\n\t\t</SeaBattleContext.Provider>\r\n\t)\r\n}\r\n\r\nexport default SeaBattle\r\n\r\nSeaBattle.propTypes = {\r\n\tcellSize: PropTypes.number.isRequired\r\n}\r\n\r\nSeaBattle.defaultProps = {\r\n\tcellSize: 32\r\n}","import { useContext } from \"react\";\r\nimport { SeaBattleContext } from \"../components/SeaBattle\";\r\n\r\nconst useSeaBattle = () => useContext(SeaBattleContext)\r\n\r\nexport default useSeaBattle","import { useSeaBattle } from '../hooks'\r\nimport styles from './styles.module.css'\r\nimport PropTypes from 'prop-types'\r\nimport { useMemo } from 'react'\r\nimport { forwardRef } from 'react'\r\n\r\n// Здесь хранится разлиновка (матрица) игрового поля.\r\nconst BattleFieldTable = forwardRef((props, ref) => {\r\n\tconst { columns, rows, signed, axisX, axisY } = props\r\n\tconst { cellSize } = useSeaBattle()\r\n\r\n\tconst matrix = useMemo(() => {\r\n\t\tconst matrix = []\r\n\r\n\t\tfor (let y = 0; y < rows; y++) {\r\n\t\t\tconst row = []\r\n\r\n\t\t\tfor (let x = 0; x < columns; x++) {\r\n\t\t\t\tconst item = { x, y }\r\n\t\t\t\trow.push(item)\r\n\t\t\t}\r\n\r\n\t\t\tmatrix.push(row)\r\n\t\t}\r\n\r\n\t\treturn matrix\r\n\t}, [columns, rows])\r\n\r\n\treturn (\r\n\t\t<table ref={ref} className={styles['battlefield-table']}>\r\n\t\t\t<tbody>\r\n\t\t\t\t{matrix.map((row, y) => (\r\n\t\t\t\t\t<tr key={y}>\r\n\t\t\t\t\t\t{row.map((item, x) => {\r\n\t\t\t\t\t\t\tlet markerX = null\r\n\t\t\t\t\t\t\tlet markerY = null\r\n\r\n\t\t\t\t\t\t\tif (signed) {\r\n\t\t\t\t\t\t\t\tif (x === 0) {\r\n\t\t\t\t\t\t\t\t\tmarkerX = (\r\n\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={styles.marker}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ left: `-${cellSize}px` }}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{axisX(y)}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (y === 0) {\r\n\t\t\t\t\t\t\t\t\tmarkerY = (\r\n\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={styles.marker}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ top: `-${cellSize}px` }}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{axisY(x)}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<td\r\n\t\t\t\t\t\t\t\t\tkey={x}\r\n\t\t\t\t\t\t\t\t\tclassName={styles['battlefield-item']}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\twidth: `${cellSize}px`,\r\n\t\t\t\t\t\t\t\t\t\theight: `${cellSize}px`,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{markerX}\r\n\t\t\t\t\t\t\t\t\t{markerY}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t))}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t)\r\n})\r\n\r\nexport default BattleFieldTable\r\n\r\nBattleFieldTable.propTypes = {\r\n\tcolumns: PropTypes.number,\r\n\trows: PropTypes.number,\r\n\tsigned: PropTypes.bool,\r\n\taxisX: PropTypes.func,\r\n\taxisY: PropTypes.func,\r\n}\r\n\r\nBattleFieldTable.defaultProps = {\r\n\tcolumns: 10,\r\n\trows: 10,\r\n\tsigned: true,\r\n\taxisX: n => n + 1,\r\n\taxisY: n => 'АБВГДЕЖЗИКЛМНОПРСТУФХЦЧШЩЫЭЮЯ'[n], // не более 29\r\n}\r\n","// Док для кораблей.\r\n\r\nimport { forwardRef } from 'react'\r\nimport { useSeaBattle } from '../hooks'\r\nimport styles from './styles.module.css'\r\n\r\nconst Dock = forwardRef((props, ref) => {\r\n\tconst { cellSize } = useSeaBattle()\r\n\treturn (\r\n\t\t<div\r\n\t\t\tref={ref}\r\n\t\t\tclassName={styles.dock}\r\n\t\t\tstyle={{\r\n\t\t\t\twidth: `${cellSize * 10}px`,\r\n\t\t\t\theight: `${cellSize * 10}px`,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\nexport default Dock\r\n","import { useSeaBattle } from '../hooks'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './styles.module.css'\r\nimport { forwardRef, useMemo } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nconst Ship = forwardRef((props, ref) => {\r\n\tconst { x, y, length, direction, killed, onClick } = props\r\n\t// Размер ячейки игрового поля.\r\n\tconst { cellSize } = useSeaBattle()\r\n\r\n\tconst style = useMemo(() => {\r\n\t\tconst style = {}\r\n\r\n\t\t// Длина корабля.\r\n\t\tconst along = length * cellSize + length - 1\r\n\t\t// Ширина корабля.\r\n\t\tconst across = cellSize\r\n\r\n\t\tif (direction === 'row') {\r\n\t\t\tstyle.width = `${along}px`\r\n\t\t\tstyle.height = `${across}px`\r\n\t\t} else {\r\n\t\t\tstyle.width = `${across}px`\r\n\t\t\tstyle.height = `${along}px`\r\n\t\t}\r\n\r\n\t\tconst offsetX = x * (cellSize + 1)\r\n\t\tconst offsetY = y * (cellSize + 1)\r\n\r\n\t\tstyle.left = `${offsetX}px`\r\n\t\tstyle.top = `${offsetY}px`\r\n\r\n\t\treturn style\r\n\t}, [cellSize, direction, length, x, y])\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tonClick={onClick}\r\n\t\t\tref={ref}\r\n\t\t\tclassName={classNames(styles.ship, {\r\n\t\t\t\t[styles['ship-killed']]: killed,\r\n\t\t\t})}\r\n\t\t\tstyle={style}\r\n\t\t/>\r\n\t)\r\n})\r\n\r\nexport default Ship\r\n\r\nShip.propTypes = {\r\n\tx: PropTypes.number.isRequired,\r\n\ty: PropTypes.number.isRequired,\r\n\tlength: PropTypes.number.isRequired,\r\n\tdirection: PropTypes.oneOf(['row', 'column']).isRequired,\r\n\tkilled: PropTypes.bool.isRequired,\r\n}\r\n\r\nShip.defaultProps = {\r\n\tkilled: false,\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport { useDrag } from 'react-dnd'\r\nimport Ship from './Ship'\r\n\r\n// Корабль, который можно переносить.\r\nconst DraggableShip = props => {\r\n\tconst { id, x, y, length, direction, killed, onClick } = props\r\n\r\n\t// drag - функция, которая позволит нам работать с DraggableShip'ом.\r\n\tconst [collected, drag] = useDrag(() => ({\r\n\t\t// Тип того что перетаскиваем.\r\n\t\ttype: 'SHIP',\r\n\t\t// Идентификатор того, что перетаскиваем.\r\n\t\titem: { id },\r\n\t\t/*\r\n\t\t\tФункция, которая принимает монитор и возвращает данные,\r\n\t\t\tкоторые помещаются в первый ответ от useDrag, которые позволят нам\r\n\t\t\tманипулировать состоянием.\r\n\t\t\tМонитор - функция, которая следит за тем, как происходит процесс\r\n\t\t\tперетаскивания, и возвращает объект collected, который мы\r\n\t\t\tзапоминаем.\r\n\t\t*/\r\n\t\tcollect: monitor => ({\r\n\t\t\tisDragging: monitor.isDragging(),\r\n\t\t}),\r\n\t}))\r\n\r\n\t// Если корабль перетаскивается:\r\n\tif (collected.isDragging) {\r\n\t\t// Не отрисовывать его.\r\n\t\treturn null\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Ship\r\n\t\t\tref={drag}\r\n\t\t\tonClick={onClick}\r\n\t\t\tkilled={killed}\r\n\t\t\tx={x}\r\n\t\t\ty={y}\r\n\t\t\tlength={length}\r\n\t\t\tdirection={direction}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default DraggableShip\r\n\r\nDraggableShip.propTypes = {\r\n\tx: PropTypes.number.isRequired,\r\n\ty: PropTypes.number.isRequired,\r\n\tlength: PropTypes.number.isRequired,\r\n\tdirection: PropTypes.oneOf(['row', 'column']).isRequired,\r\n\tkilled: PropTypes.bool.isRequired,\r\n\tonclick: PropTypes.func.isRequired,\r\n}\r\n\r\nDraggableShip.defaultProps = {\r\n\tkilled: false,\r\n\tonclick() {},\r\n}\r\n","// Редактор для расстановки кораблей.\r\n\r\nimport BattleField from './BattleField'\r\nimport BattleFieldTable from './BattleFieldTable'\r\nimport Dock from './Dock'\r\nimport styles from './styles.module.css'\r\nimport PropTypes from 'prop-types'\r\nimport { useMemo, useRef } from 'react'\r\nimport DraggableShip from './DraggableShip'\r\nimport { useDrop } from 'react-dnd'\r\nimport { useSeaBattle } from '../hooks'\r\n\r\nconst BattleFieldEditor = props => {\r\n\tconst { ships, onPlace, onDock, onRotate } = props\r\n\r\n\tconst dockedShips = useMemo(\r\n\t\t() => ships.filter(ship => !ship.placed),\r\n\t\t[ships]\r\n\t)\r\n\r\n\tconst placedShips = useMemo(\r\n\t\t() => ships.filter(ship => ship.placed),\r\n\t\t[ships]\r\n\t)\r\n\r\n\tconst { cellSize } = useSeaBattle()\r\n\t// Поле, на котором размещаем корабли.\r\n\tconst placeRef = useRef()\r\n\r\n\t// Бросок корабля над полем доком.\r\n\tconst [, dockDrop] = useDrop(() => ({\r\n\t\taccept: 'SHIP',\r\n\t\tdrop(item) {\r\n\t\t\tonDock(item.id)\r\n\t\t},\r\n\t}))\r\n\r\n\t// Бросок корабля над полем для расстановки.\r\n\tconst [, placeDrop] = useDrop(() => ({\r\n\t\taccept: 'SHIP',\r\n\t\tdrop(item, monitor) {\r\n\t\t\t/*\r\n\t\t\t\tМетод getInitialClientOffset() возвращает координаты мыши\r\n\t\t\t\tотносительно верхнего левого угла страницы в момент начала\r\n\t\t\t\tперетаскивания.\r\n\t\t\t*/\r\n\t\t\tconst mouseStart = monitor.getInitialClientOffset()\r\n\r\n\t\t\t/*\r\n\t\t\t\tМетод getClientOffset() возвращает координаты мыши относительно\r\n\t\t\t\tверхнего левого угла страницы в последний момент перетаскивания.\r\n\t\t\t*/\r\n\t\t\tconst mouseFinish = monitor.getClientOffset()\r\n\r\n\t\t\t/*\r\n\t\t\t\tМетод getInitialSourceClientOffset() возвращает координаты\r\n\t\t\t\tлевого верхнего угла перетаскиваемого элемента относительно\r\n\t\t\t\tверхнего левого угла страницы в момент начала перетаскивания.\r\n\t\t\t*/\r\n\t\t\tconst shipStart = monitor.getInitialSourceClientOffset()\r\n\r\n\t\t\t/*\r\n\t\t\t\tКоординаты, где взяли корабль\r\n\t\t\t\tотносительно верхнего левого угла этого корабля.\r\n\t\t\t*/\r\n\t\t\tconst diff = {\r\n\t\t\t\tx: mouseStart.x - shipStart.x,\r\n\t\t\t\ty: mouseStart.y - shipStart.y,\r\n\t\t\t}\r\n\r\n\t\t\t// Координаты поля, на котором размещаем корабли.\r\n\t\t\tconst rect = placeRef.current.getBoundingClientRect()\r\n\r\n\t\t\t/*\r\n\t\t\t\tКоординаты ячейки поля, на котором размещаем корабли,\r\n\t\t\t\tпри броске корабля.\r\n\t\t\t\tИщем ячейку, на которую упал центр первой ячейки корабля.\r\n\t\t\t*/\r\n\t\t\tconst x = Math.floor(\r\n\t\t\t\t(mouseFinish.x - rect.left - diff.x + cellSize / 2) / cellSize\r\n\t\t\t)\r\n\r\n\t\t\tconst y = Math.floor(\r\n\t\t\t\t(mouseFinish.y - rect.top - diff.y + cellSize / 2) / cellSize\r\n\t\t\t)\r\n\r\n\t\t\tonPlace(item.id, x, y)\r\n\r\n\t\t\t/*\r\n\t\t\t\tМетод getSourceClientOffset() возвращает координаты левого\r\n\t\t\t\tверхнего угла перетаскиваемого элемента относительно верхнего\r\n\t\t\t\tлевого угла страницы в последний момент перетаскивания.\r\n\t\t\t*/\r\n\t\t},\r\n\t}))\r\n\r\n\tplaceDrop(placeRef)\r\n\r\n\treturn (\r\n\t\t<div className={styles['battlefield-constructor']}>\r\n\t\t\t<Dock ref={dockDrop}>\r\n\t\t\t\t{dockedShips.map(ship => (\r\n\t\t\t\t\t<DraggableShip\r\n\t\t\t\t\t\tkey={ship.id}\r\n\t\t\t\t\t\t{...ship}\r\n\t\t\t\t\t\tonClick={() => onRotate(ship.id)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</Dock>\r\n\t\t\t<BattleField>\r\n\t\t\t\t<BattleFieldTable ref={placeRef} />\r\n\r\n\t\t\t\t{placedShips.map(ship => (\r\n\t\t\t\t\t<DraggableShip\r\n\t\t\t\t\t\tkey={ship.id}\r\n\t\t\t\t\t\t{...ship}\r\n\t\t\t\t\t\tonClick={() => onRotate(ship.id)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</BattleField>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default BattleFieldEditor\r\n\r\nBattleFieldEditor.propTypes = {\r\n\tships: PropTypes.array.isRequired,\r\n\tonPlace: PropTypes.func.isRequired,\r\n\tonDock: PropTypes.func.isRequired,\r\n\tonRotate: PropTypes.func.isRequired,\r\n}\r\n","// Вспомогательные функции.\r\n\r\n// Функция проверяет координаты на валидность.\r\nexport const isValidCoordinates = (x, y) => 0 <= x && x < 10 && 0 <= y && y < 10\r\n\r\n// Функция возвращает стандартный набор кораблей.\r\nexport const getDefaultShips = () => [\r\n\t/*\r\n\t\tplaced - флаг, который показывает, стоит ли корабль на игровом поле.\r\n\t\tЕсли он false, значит корабль ещё в доке.\r\n\t*/\r\n\t{ id: 1, x: 0, y: 0, length: 4, direction: 'row', placed: false },\r\n\t{ id: 2, x: 0, y: 2, length: 3, direction: 'row', placed: false },\r\n\t{ id: 3, x: 4, y: 2, length: 3, direction: 'row', placed: false },\r\n\t{ id: 4, x: 0, y: 4, length: 2, direction: 'row', placed: false },\r\n\t{ id: 5, x: 3, y: 4, length: 2, direction: 'row', placed: false },\r\n\t{ id: 6, x: 6, y: 4, length: 2, direction: 'row', placed: false },\r\n\t{ id: 7, x: 0, y: 6, length: 1, direction: 'row', placed: false },\r\n\t{ id: 8, x: 2, y: 6, length: 1, direction: 'row', placed: false },\r\n\t{ id: 9, x: 4, y: 6, length: 1, direction: 'row', placed: false },\r\n\t{ id: 10, x: 6, y: 6, length: 1, direction: 'row', placed: false },\r\n]\r\n\r\n/*\r\n\tФункция определяет допустимо ли принятое расположение кораблей.\r\n\tПринимает массив кораблей.\r\n*/\r\nexport const isNormalPosition = ships => {\r\n\t/*\r\n\t\tВспомогательная матрица.\r\n\t\tЕсли в ячейку нельзя ставить корабль, записываем в неё 1.\r\n\t*/\r\n\tconst matrix = Array(10)\r\n\t\t.fill()\r\n\t\t.map(() => Array(10).fill(0))\r\n\r\n\tfor (const ship of ships) {\r\n\t\tconst { direction, length } = ship\r\n\r\n\t\tconst dx = direction === 'row'\r\n\t\tconst dy = direction === 'column'\r\n\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tconst x = ship.x + i * dx\r\n\t\t\tconst y = ship.y + i * dy\r\n\r\n\t\t\tif (!isValidCoordinates(x, y) || matrix[y][x]) {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (direction === 'row') {\r\n\t\t\tfor (let y = ship.y - 1; y <= ship.y + 1; y++) {\r\n\t\t\t\tfor (let x = ship.x - 1; x <= ship.x + length; x++) {\r\n\t\t\t\t\tif (isValidCoordinates(x, y)) {\r\n\t\t\t\t\t\tmatrix[y][x] = 1\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let y = ship.y - 1; y <= ship.y + length; y++) {\r\n\t\t\t\tfor (let x = ship.x - 1; x <= ship.x + 1; x++) {\r\n\t\t\t\t\tif (isValidCoordinates(x, y)) {\r\n\t\t\t\t\t\tmatrix[y][x] = 1\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn true\r\n}\r\n\r\n// Функция выставляет корабли случайным образом.\r\nexport const randomize = () => {\r\n\tconst ships = getDefaultShips()\r\n\r\n\tfor (let i = 0; i < 100_000; i++) {\r\n\t\tfor (const ship of ships) {\r\n\t\t\tship.x = Math.floor(Math.random() * 10)\r\n\t\t\tship.y = Math.floor(Math.random() * 10)\r\n\t\t\tship.direction = ['row', 'column'][Math.floor(Math.random() * 2)]\r\n\t\t}\r\n\r\n\t\tif (isNormalPosition(ships)) {\r\n\t\t\treturn ships\r\n\t\t}\r\n\t}\r\n\r\n\treturn getDefaultShips()\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { getDefaultShips, isNormalPosition, randomize } from '../additional'\r\n\r\nconst initialState = {\r\n\tships: getDefaultShips(),\r\n}\r\n\r\nexport const editorSlice = createSlice({\r\n\tname: 'editor',\r\n\r\n\tinitialState,\r\n\r\n\treducers: {\r\n\t\t// Функция принимает массив кораблей и выставляет на поле.\r\n\t\tsetShips(state, action) {\r\n\t\t\tstate.ships = action.payload\r\n\t\t},\r\n\r\n\t\t// Функция ставит корабль на поле для расстановки.\r\n\t\tplace(state, action) {\r\n\t\t\t// id корабля, координаты ячейки, на которую хотим его разместить.\r\n\t\t\tconst { id, x, y } = action.payload\r\n\r\n\t\t\t/*\r\n\t\t\t\tКорабли, которые уже расположены, кроме того,\r\n\t\t\t\tкоторый сейчас хотим расположить.\r\n\t\t\t*/\r\n\t\t\tconst placed = state.ships.filter(\r\n\t\t\t\tship => ship.placed && ship.id !== id\r\n\t\t\t)\r\n\r\n\t\t\t// Располагаемый корабль.\r\n\t\t\tconst ship = state.ships.find(ship => ship.id === id)\r\n\r\n\t\t\t// Будут ли корабли с учётом располагаемого корабля стоять допустимо?\r\n\t\t\tconst normal = isNormalPosition([...placed, { ...ship, x, y }])\r\n\t\t\tif (normal) {\r\n\t\t\t\tObject.assign(ship, { x, y, placed: true })\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Функция ставит корабль в док.\r\n\t\tdock(state, action) {\r\n\t\t\tconst id = action.payload\r\n\r\n\t\t\tconst defaultShip = getDefaultShips().find(ship => ship.id === id)\r\n\t\t\tconst ship = state.ships.find(ship => ship.id === id)\r\n\r\n\t\t\tif (ship && defaultShip) {\r\n\t\t\t\tObject.assign(ship, defaultShip)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Функция расставляет корабли случайным образом.\r\n\t\trandom(state) {\r\n\t\t\tstate.ships = randomize()\r\n\t\t\tfor (const ship of state.ships) {\r\n\t\t\t\tship.placed = true\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Функция возвращает корабли в док.\r\n\t\treset(state) {\r\n\t\t\tstate.ships = getDefaultShips()\r\n\t\t},\r\n\r\n\t\t// Функция поворачивает переданный корабль.\r\n\t\trotate(state, action) {\r\n\t\t\t// id корабля, который хотим повернуть.\r\n\t\t\tconst id = action.payload\r\n\r\n\t\t\t// Поворачиваемый корабль.\r\n\t\t\tconst ship = state.ships.find(ship => ship.id === id)\r\n\r\n\t\t\tif (!ship) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tif (!ship.placed) {\r\n\t\t\t\tship.direction = ship.direction === 'row' ? 'column' : 'row'\r\n\t\t\t} else {\r\n\t\t\t\t/*\r\n\t\t\t\tКорабли, которые уже расположены, кроме того,\r\n\t\t\t\tкоторый сейчас хотим повернуть.\r\n\t\t\t*/\r\n\t\t\t\tconst placed = state.ships.filter(\r\n\t\t\t\t\tship => ship.placed && ship.id !== id\r\n\t\t\t\t)\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t\tБудут ли корабли с учётом поворачиваемого корабля\r\n\t\t\t\t\tстоять допустимо?\r\n\t\t\t\t*/\r\n\t\t\t\tconst normal = isNormalPosition([\r\n\t\t\t\t\t...placed,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t...ship,\r\n\t\t\t\t\t\tdirection: ship.direction === 'row' ? 'column' : 'row',\r\n\t\t\t\t\t},\r\n\t\t\t\t])\r\n\r\n\t\t\t\tif (normal) {\r\n\t\t\t\t\tship.direction = ship.direction === 'row' ? 'column' : 'row'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport const { place, dock, random, reset, rotate, setShips } =\r\n\teditorSlice.actions\r\n\r\nexport default editorSlice.reducer\r\n","/*     Главное состояние.     */\r\n\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport { randomize } from '../additional'\r\n\r\nconst initialState = {\r\n\tships: randomize().map(ship => ({...ship, placed: true})),\r\n}\r\n\r\nexport const mainSlice = createSlice({\r\n\tname: 'main',\r\n\r\n\tinitialState,\r\n\r\n\treducers: {\r\n\t\t// Функция принимает массив кораблей и выставляет на поле.\r\n\t\tsetShips(state, action) {\r\n\t\t\tstate.ships = action.payload\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport const { setShips } = mainSlice.actions\r\n\r\nexport default mainSlice.reducer\r\n","import { useCallback } from 'react'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { BattleFieldEditor } from '../components'\r\nimport { place, dock, random, reset, rotate, setShips } from '../store/editor'\r\nimport { setShips as setDefaultShips } from '../store/main'\r\nimport styles from './styles.module.css'\r\n\r\n// Страница с редактором игры.\r\nconst EditorPage = () => {\r\n\t/*\r\n\t\tКорабли из состояния главной страницы, которые расставились\r\n\t\tавтоматически при загрузке страницы.\r\n\t*/\r\n\tconst defaultShips = useSelector(state => state.main.ships)\r\n\r\n\tconst ships = useSelector(state => state.editor.ships)\r\n\tconst dispatch = useDispatch()\r\n\tconst history = useHistory()\r\n\r\n\t// Расставлены ли все корабли?\r\n\tconst placed = useMemo(() => ships.every(ship => ship.placed), [ships])\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(setShips(defaultShips))\r\n\t}, [defaultShips, dispatch])\r\n\r\n\t// Обработчик клика по кнопке \"Сохранить\".\r\n\tconst clickHandler = useCallback(() => {\r\n\t\tdispatch(setDefaultShips(ships))\r\n\t\thistory.push('/')\r\n\t}, [dispatch, history, ships])\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<div className={styles['battlefield-constructor']}>\r\n\t\t\t\t{/*\r\n\t\t\t\t\tОбработчик onPlace принимает id корабля и координаты,\r\n\t\t\t\t\tкуда его нужно сбросить.\r\n\t\t\t\t\tОбработчик onDock принимает id корабля.\r\n\t\t\t\t*/}\r\n\t\t\t\t<BattleFieldEditor\r\n\t\t\t\t\tships={ships}\r\n\t\t\t\t\tonPlace={(id, x, y) => dispatch(place({ id, x, y }))}\r\n\t\t\t\t\tonDock={id => dispatch(dock(id))}\r\n\t\t\t\t\tonRotate={id => dispatch(rotate(id))}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles['editor-actions']}>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName={styles.action}\r\n\t\t\t\t\tonClick={() => dispatch(reset())}\r\n\t\t\t\t>\r\n\t\t\t\t\tСбросить\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName={styles.action}\r\n\t\t\t\t\tonClick={() => dispatch(random())}\r\n\t\t\t\t>\r\n\t\t\t\t\tСлучайно\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName={styles.action}\r\n\t\t\t\t\tdisabled={!placed}\r\n\t\t\t\t\tonClick={clickHandler}\r\n\t\t\t\t>\r\n\t\t\t\t\tСохранить\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default EditorPage\r\n","import styles from './styles.module.css'\r\nimport { BattleField, BattleFieldTable, Ship, Shot } from '../components'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst MainPage = () => {\r\n\tconst ships = useSelector(state => state.main.ships)\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<div className={styles['main-content']}>\r\n\t\t\t\t<BattleField>\r\n\t\t\t\t\t<BattleFieldTable\r\n\t\t\t\t\t\t// columns={12}\r\n\t\t\t\t\t\t// rows={5}\r\n\t\t\t\t\t\t// signed={false}\r\n\t\t\t\t\t\taxisX={n => n + 1}\r\n\t\t\t\t\t\t// axisY ={n => 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[n]}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t{ships.map(ship => (\r\n\t\t\t\t\t\t<Ship key={ship.id} {...ship} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</BattleField>\r\n\r\n\t\t\t\t<div className={styles['main-actions']}>\r\n\t\t\t\t\t<Link to=\"/editor\">\r\n\t\t\t\t\t\t<button className={styles.action}>Редактировать</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to=\"/bot\">\r\n\t\t\t\t\t\t<button className={styles.action}>\r\n\t\t\t\t\t\t\tИграть с ботом\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<button className={styles.action}>Играть онлайн</button>\r\n\t\t\t\t\t<button className={styles.action}>Бросить вызов</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<BattleField>\r\n\t\t\t\t\t<BattleFieldTable />\r\n\t\t\t\t</BattleField>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MainPage\r\n","import { Switch, Route } from \"react-router-dom\";\r\nimport { BotPage, EditorPage, MainPage } from \"./pages\"\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path='/editor' component={EditorPage} />\r\n\t\t\t<Route path='/bot' component={BotPage} />\r\n\t\t\t<Route path='/' component={MainPage} />\r\n\t\t</Switch>\r\n\t)\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// Хранилище для Redux.\r\n\r\nimport { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport editorReducer from './editor'\r\nimport mainReducer from './main'\r\n\r\nexport const store = configureStore({\r\n\treducer: {\r\n\t\teditor: editorReducer,\r\n\t\tmain: mainReducer,\r\n\t},\r\n})\r\n\r\nexport default store\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { SeaBattle } from './components'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport { DndProvider } from 'react-dnd'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<DndProvider backend={HTML5Backend}>\r\n\t\t\t\t\t<SeaBattle cellSize={30}>\r\n\t\t\t\t\t\t<App />\r\n\t\t\t\t\t</SeaBattle>\r\n\t\t\t\t</DndProvider>\r\n\t\t\t</BrowserRouter>\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1ZoGl\",\"main-content\":\"styles_main-content__1nsfp\",\"main-actions\":\"styles_main-actions__2HC0b\",\"editor-actions\":\"styles_editor-actions__3CX6B\",\"action\":\"styles_action__1UQw9\"};"],"sourceRoot":""}